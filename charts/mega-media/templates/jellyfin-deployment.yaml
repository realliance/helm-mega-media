{{- with .Values.jellyfin -}}
{{- if .enabled -}}
{{- $contextWithName := merge (dict "name" "jellyfin") $ -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mega-media.name" $contextWithName }}
  labels:
    {{- include "mega-media.labels" $contextWithName | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "mega-media.selectorLabels" $contextWithName | nindent 6 }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mega-media.labels" $contextWithName | nindent 8 }}
        {{- with $.Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.nodeName }}
      nodeName: {{ $.Values.nodeName | quote }}
      {{- end }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      affinity:
        {{- include "mega-media.sameNodePodAffinity" $contextWithName | nindent 10 }}
      containers:
        - name: jellyfin
          image: "{{ .image }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .port }}
              protocol: TCP
          livenessProbe:
            {{- .livenessProbe | toYaml | nindent 12 }}
          readinessProbe:
            {{- .readinessProbe | toYaml | nindent 12 }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          volumeMounts:
          - mountPath: /media
            name: media
          - mountPath: /config
            name: config
          envFrom:
          - configMapRef:
              name: {{ include "mega-media.name" (merge (dict "name" "arr-config") $) }}
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: {{ include "mega-media.name" $contextWithName }}-config
      - name: media
        persistentVolumeClaim:
          claimName: {{ include "mega-media.name" (merge (dict "name" "media") $) }}
{{ with .config -}}
{{ template "mega-media.config.pvc" (merge (dict "storageClassName" .storageClassName "size" .size ) $contextWithName) }}
{{- end }}
{{ template "mega-media.service" (merge (dict "port" .port "targetPort" .port) $contextWithName) }}
{{- end }}
{{- end }}