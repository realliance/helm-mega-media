{{- $nameInTable := merge (dict "name" "sync-prowlarr") . -}}
{{- $db_host := .Values.postgresql.enabled | ternary (printf "%s-postgresql" .Release.Name) .Values.externalPostgres.host -}}
{{- $db_port := .Values.postgresql.enabled | ternary "5432" .Values.externalPostgres.port -}}
{{- $db_user := .Values.postgresql.enabled | ternary "postgres" .Values.externalPostgres.username -}}
{{- $db_secret_name := .Values.postgresql.enabled | ternary (printf "%s-postgresql" .Release.Name) .Values.externalPostgres.passwordFromSecretKeyRef.name -}}
{{- $db_secret_key := .Values.postgresql.enabled | ternary "postgres-password" .Values.externalPostgres.passwordFromSecretKeyRef.key -}}
{{- $db_dict := dict "host" $db_host "port" $db_port "user" $db_user "secret_name" $db_secret_name "secret_key" $db_secret_key -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mega-media.name" $nameInTable }}
  labels:
    {{- include "mega-media.labels" $nameInTable | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      initContainers:
      {{- include "mega-media.insert.apps" (merge (dict "database" (printf "%s_main" .Values.arrs.prowlarr.name) "db_config" $db_dict "port" .Values.arrs.prowlarr.port) .) | nindent 6 }}
      containers:
      - name: post-sync-job
        image: "alpine:3.3"
        command: ["/bin/sleep","1"]